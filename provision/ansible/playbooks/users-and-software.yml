---
- hosts: react-ui
  remote_user: deployer
  become: yes

#  vars_prompt:
#  - name: "rhn_username"
#    prompt: "Enter Your Red Hat Customer Portal Username"
#    private: no
#
#  - name: "rhn_password"
#    prompt: "Enter Your Red Hat Customer Portal Password"
#    private: yes

  vars_files:
    - vars/main.yml
#    - vars/vaulted-passwords.yml
    - vars/VMWare-passwords.yml
#    - [ "vars/{{ ansible_virtualization_type }}-passwords.yml", "vars/vaulted-passwords.yml" ]
  vars:
    transfer_method: copy-from-controller
    
  pre_tasks:
    - debug: msg="VM type = '{{ ansible_virtualization_type }}'"

    - name: ensure github.com is a known host
      lineinfile:
        dest: "/home/{{ansible_ssh_user}}/.ssh/known_hosts"
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        regexp: "^github\\.com"

  roles:
    - { role: swap }
    - { role: system, zoneeditPassword: "{{vaulted_zoneedit_password}}" }
    - { role: geerlingguy.nodejs }
    - { role: dependent-libs }
    - { role: dev-tools }
    - { role: geerlingguy.nginx }
    - { role: geerlingguy.apache }
    - { role: rhtconsulting.jboss_common }
    - { role: rhtconsulting.jboss_eap }
#    - { role: wildfly/install }
#    - { role: wildfly/uninstall }


# Todo
#    - { role: geerlingguy.dotfiles }
#    - { role: geerlingguy.firewall }

  tasks:
    - debug: msg="Server = '{{subDomain}}.{{domain}}.{{domainExt}}'"

    - name: add deployer to nginx group
      user: name=deployer groups=nginx append=yes

    - name: add nginx to deployer group
      user: name=nginx groups=deployer append=yes

    - name: add apache to deployer group
      user: name=apache groups=deployer append=yes

    - name: Create virtual host root as deployer
      file: path="/var/www/{{subDomain}}.{{domain}}.{{domainExt}}" owner=deployer group=deployer state=directory mode="u=wrx,g=wrx,o=wrx"

    - name: Restart nginx.
      service: name=nginx state=restarted enabled=yes

#    - name: Remove npm packages.
#      npm: name={{ item }} state=absent global=yes
#      with_items:
#        - lint
#        - gulp-jslint

# Much faster to bring in build-related, gulp 'required' npm packages from the build directory
# on the guest using an ansible 'command' that references the package.json. See react play...
# Researve npm globals package installation for package intended to be run on CLI.

    - name: Install npm packages.
      npm: name='{{ item }}' global=yes state=present
      with_items: '{{node_modules}}'

  post_tasks:
    - debug: msg="wildfly_mgmt_bind_address = {{wildfly_mgmt_bind_address}}"
  
    - name: Add wildfly group to sudoers file and validate
      lineinfile:
        dest: /etc/sudoers
        regexp: '^%wildfly'
        line: '%wildfly ALL=(ALL) NOPASSWD: ALL'
        state: present
        validate: "visudo -cf %s"
    
    - name: add deployer to wildfly group
      user: name=deployer groups=wildfly append=yes
    
#    - name: "Set java environment variables in: /etc/profile.d/java.sh"
#      template: src=etc_profiled_java.sh.j2 dest=/etc/profile.d/java.sh owner=root group=root mode="u=wr,g=r,o=r"
